// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  USER
}

model User {
  id        String     @default(uuid()) @id
  lastName  String 
  name      String
  email     String     @unique
  address   String 
  phone     String
  role      Role       @default(USER)
  password  String

  isActive Boolean      @default(true)

  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  purchases  Purchase[]
}

model Product {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  price       Float
  stock       Int
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  purchaseLines PurchaseLine[]
}

model Purchase {
  id          String       @id @default(uuid())
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  totalAmount Decimal
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  isDeleted   Boolean  @default(false)
  purchaseLines PurchaseLine[]
}

model PurchaseLine {
  id          String   @id @default(uuid())
  purchaseId  String
  purchase    Purchase @relation(fields: [purchaseId], references: [id])

  productId   String
  product     Product  @relation(fields: [productId], references: [id])

  quantity    Int
  subtotal    Decimal
  createdAt   DateTime @default(now())
}

model Report {
  id        String     @default(uuid()) @id
  content   String
  type      String
  isDeleted Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}